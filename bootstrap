#! /bin/bash

## bootstrap file for sharutils
##
## Copyright (C) 1995-2015, 2021 Free Software Foundation, Inc.
##
## This program is free software; you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 3, or (at your option)
## any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License along
## with this program; if not, see <http://gnu.org/licenses/gpl.html>

# This script is used to insert the current version number into the various
# files that need the current version number, and it inserts the current
# gettext version number into the AM_GNU_GETTEXT_VERSION macro
#
# This script is _NOT_ distributed with the product.  The _only_
# use for this script is to prep a CVS checkout of the sources for
# the initial build.  Once it has been run, it should not be necessary
# to run it again.

declare -r prog=$(basename $0 .sh)
declare -r progpid=$$
declare -r progdir=$(cd $(dirname $0) >/dev/null && pwd -P)
declare -r program=$progdir/$(basename $0)
declare -r progsrc=${progdir%-bld}

unset CDPATH

die() {
    echo "${prog} failure: $*"
    kill -TERM ${progpid}
    sleep 1
    kill -9 $progpid
    exit 1
} >&2

warn() {
    echo "${prog} WARNING: $*"
    sleep 1
} >&2

fini() {
    trap '' 0
    exit 0
}

init() {
    sets=$(set -o)
    case "$sets" in
    (*posix*) set -o posix ;;
    esac
    case "$sets" in
    (*xtrace*on*) xtrace_active=true ;;
    ( * )         xtrace_active=false ;;
    esac

    trap 'die early death' 0
    set -e
    cd $progdir
    test -d .git && {
        git clean -f -x -d .
    } >/dev/null 2>&1

    if test -x ../gnulib/gnulib-tool
    then gltool=$(cd ../gnulib >/dev/null; pwd)/gnulib-tool
    else gltool=$(which gnulib-tool)
    fi
    test -x "${gltool}" || die "cannot locate gnulib-tool"
    gldir=${gltool%/*}

    test -d m4 && rm -rf m4
    mkdir m4
    ln tests/sharutils.m4 m4/.

    sharutils_version=$(
        cd ${progsrc} || die "$progsrc directory is invalid"
        test -d .git  || die "$progsrc directory is invalid"
        ${gldir}/build-aux/git-version-gen ${progdir}/sharutils.ver)
    sharutils_eaddr=$(autoconf -t 'AC_INIT:$3' configure.ac.git)

    autoconf_version=$(
        autoconf --version | \
            sed -e 's/autoconf.*) *//' -e '1q' )

    gettext_version=$(
        gettext --version | \
            sed -e 's/^gettext .*) *//' -e '1q' )

    automake_version=$(
        automake --version | \
            sed -e 's/^automake .*) *//' \
                -e 's/\([0-9]*\.[0-9]*\)\..*/\1/' -e 1q
    )

    nl=$'\n'
    if test -o xtrace
    then
        dashx=-x
    elif [[ $VERBOSE =~ [tTyY1-9].* ]]
    then
        set -x
        dashx=-x
    else
        dashx=
    fi

    test "/$progdir" = "/${progdir%-bld}" || {
        for f in ${progsrc}/po/*.po
        do
            g=po/$(basename $f)
            rm -f $g
            ln $f $g || ln -s $f $g
        done 2>/dev/null
    }
}

set_up_src_dir() {
    cd src
    sed "/^version *=/s/=.*/= '${sharutils_version}';/" shar-std.def > XX
    mv -f XX shar-std.def
    autogen scripts.def

    for def in *-opts.def
    do
        autogen $def
        autogen -b ${def%-opts.def} -Tagman-cmd.tpl $def
        autogen -Tagtexi-cmd.tpl -DLEVEL=section $def
        mv -f ${def%-opts.def}.1 invoke-${def%-opts.def}.texi ../doc/.
        rm -f invoke-${def%-opts.def}.menu
    done

    cd ..
}

install_libopts() {
    liboptsdir=libopts
    f=$(autoopts-config libsrc)
    case "$f" in
    *.tar.gz ) tar -xzf $f ;;
    *.tar.xz ) tar -xJf $f ;;
    *.tar.bz2) tar -xjf $f ;;
    * ) die "cannot find autoopts library source:  $f" ;;
    esac
    f=$(basename ${f%.tar.*})
    mv $f ${liboptsdir}
    cd ${liboptsdir}
    sed '/if INSTALL_LIBOPTS/inoinst_LIBRARIES = libopts.a
	/if INSTALL_LIBOPTS/,/^endif$/d
	/^libopts_la_LDFLAGS/d
	/^libopts_la_CPPFLAGS/s@$@ -I$(top_srcdir)/lib@
	s/libopts_la/libopts_a/g' Makefile.am > Makefile.X
    mv -f Makefile.X Makefile.am
    sed "/^#line/s@\.\./@${liboptsdir}/@" autoopts/usage-txt.h > X
    mv -f X autoopts/usage-txt.h
    cd ..
    sed '/end .* of INVOKE_LIBOPTS_MACROS/q' \
        ${liboptsdir}/m4/libopts.m4 > m4/libopts.m4
}

set_up_po_dir() {
    declare last_pull=$(stat -c%Y ${progsrc}/po/.gitignore)
    declare now=$(date +%s)
    declare day_len=$(( 60 * 60 * 24 ))
    (( now - last_pull > day_len )) && {
        cd ${progsrc}
        echo 'resyncing with translation project in' $PWD
        if rsync -Lrtvz  translationproject.org::tp/latest/sharutils/ po
        then touch po/.gitignore
        else warn "rsync failed"
        fi
        cd ${progdir}
    }

    # Isolate all the .po files so that they are not auto-updated
    # every time the autotools are run.
    #
    cd po

    # Force all the version numbers to match.
    #
    declare vexpr='/(GNU sharutils) 4\./'
    vexpr+="s@ 4\.[0-9pre.]*@ ${sharutils_version}@g"
    sed -i "$vexpr" *.po
    chmod 644 *.po
    {
        date "+%Y-%m-%d  $(
            git config user.name
        )  <$(
            git config user.email)>"
        printf '\tRegenerated source\n'
    } > ChangeLog
    cp ChangeLog ../intl/.
    rm -f ../README
    {
        tag='Language file updates:'
        sed "/^${tag}/q" ../README.git
        echo

        fgrep PO-Revision-Date: *.po | \
            sed 's/\.po: *"PO-Revision-Date: */\t/;s/ [0-2][0-9]:.*//' | \
            sort -t$'\t' -k +2 -r
    } 1> ../README
    cd ..
}

versioned_files() {
    set_up_src_dir
    install_libopts

    test -d intl || mkdir intl || die "cannot make intl directory"
    month_stamp=$(date '+%B %Y')
    date_stamp=$(date +'%d %B %Y')
    vline="Version ${sharutils_version} - "${month_stamp}
    sed "1,5s/^Version .* by /${vline}, by /" NEWS.git > NEWS

    set_up_po_dir

    {
        cat <<-  _EOVers_
		m4_define([gettext_version], [${gettext_version}])
		AC_PREREQ([${autoconf_version}])
		_EOVers_

        case "${sharutils_version}" in
        *.*pre* ) echo '[DIST_ALPHA=README-alpha]' ;;
        *)      echo '[DIST_ALPHA=]' ;;
        esac
    } > version.m4

    cat > doc/version.texi <<- _EOVersion_
	@c Do not edit thie file
	@c This is generated by the ${prog} script

	@set UPDATED ${date_stamp}
	@set UPDATED-MONTH ${month_stamp}
	@set EDITION ${sharutils_version}
	@set VERSION ${sharutils_version}
	_EOVersion_
}

run_gnulib_tool() {

    gnulib_libs="
	alloca
	base64
	crypto/md5
	ctype
	dirname
	error
	fdl
	fflush
	fork
	freopen
	fseeko
	ftello
	gendocs
	getcwd
	gethostname
	getopt-gnu
	idcache
	inttostr
	malloc-gnu
	mkstemp
	mktime
	pathmax
	pipe
	popen
	quotearg
	realloc-gnu
	stddef
	stdlib
	stdnoreturn
	stpcpy
	strerror
	strftime
	string
	uname
	unlocked-io
	waitpid
	xalloc
	xgetcwd
	xstrtoimax
"

    ${gltool} --import ${gnulib_libs} 2>&1 | tee glt-log.txt

    sed '1,/^You may need to add #include/d' glt-log.txt > import-log.txt
    rm -f glt-log.txt

    autopoint=$(command -v autopoint)
    ${autopoint} --version | head -n2 >&2
    ${autopoint} --force > /dev/null 2>&1 || :
}

setup_configure() {
    #  Make sure the gettext version is up to date.  You cannot use the
    #  normal m4_define from version.m4 'cuz the gettext macros are
    #  specially designed to not allow that.  So, we use sed.
    #  While we're messing with it, update the automake version, too.
    #
    sed -e "/^AM_INIT_AUTOMAKE/s/@AM-VER@/${automake_version}/" \
        -e "/^AM_GNU_GETTEXT_VERSION/s/@GT-VER@/${gettext_version}/" \
        -e "/^AC_INIT/s=@GIT-VERSION@=${sharutils_version}=" \
        configure.ac.git > configure.ac

    exec 3> po/LINGUAS
    echo '# Set of available languages:' >&3
    ls -1 po | sed -n 's/\.po$//p' | columns --spread=1 >&3
    exec 3>&-

    find . -type f | xargs chmod ugo-x
    chmod -R go-w .
    chmod a+x tests/*-[1-9] src/mk-help.sh bootstrap

    shar_lib_hdrs=$(ls -1 lib | egrep -v '^(CVS|SCCS)$')
    extra_dist=$'\n## begin sharutils extras\n\nEXTRA_DIST += \\\n'$(
        echo "${shar_lib_hdrs}" | columns -I4 --spread=1 --line=' \')
    run_gnulib_tool

    {
        sed '/^# *INVOKE_LIBOPTS_MACROS/q' configure.ac
        printf '['
        for f in $(grep -E '#include  *<' import-log.txt | \
            sed 's/.*<//;s/>.*//')
        do
            f=$(echo "$f" | tr -- '-./' '___')
            echo ac_cv_header_${f}=yes
        done
        printf ']'
        sed '1,/^# *INVOKE_LIBOPTS_MACROS/d' configure.ac
    } > configure.tmp
    mv -f configure.tmp configure.ac

    echo "${extra_dist}" >> lib/Makefile.am
    test -f fdl.texi && mv fdl.texi doc/.
    AUTOPOINT=true autoreconf --verbose --force --install -Wall

    chmod ugo-x COPYING INSTALL doc/texinfo.tex
    rm -f m4/*~
}

update_include_list() {
    cd src

    # Collect all the #include directives and unique-ify them
    #
    ilist=$(
        {
            sed -n 's/^ *#include/#include/p' ../import-log.txt
            echo '#include "error.h"'
            echo '#include "locale.h"'
        } | sed '/["<]system\.h[">]/d' | \
            sort -u
    )

    # separate them by quoting type:  <> vs. ""
    # and append a backslash to all but the last line.
    # sed(1) requires this for inserting text.
    #
    ilist='#include "system.h"'$'\\\n'$(
        {
            echo "$ilist" | fgrep '<'
            echo ''
            echo "$ilist" | fgrep '"'
        } | sed 's/$/\\/;$s/\\$//'
    )

    # now insert this list into "local.h".
    #
    sed "s@^INCLUDE-LIST\$@${ilist}@" local.h.git > local.h
    cd ..
    rm -f import-log.txt
}

list_potfiles() {
    echo '# List of files which containing translatable strings.'
    grep '[C]opyright [(]C[)]' $program
    printf '\n# Package source files\n'
    ls -1 src/*.[chx]
    printf '\n# Compatibility library source files\n'
    ls -1 lib/*.[ch]
}

{
    PS4='+shar=${FUNCNAME:-=}-$LINENO> '
    init
    versioned_files
    setup_configure
    update_include_list
    list_potfiles > po/POTFILES.in
    fini
}

#  Local Variables:
#  mode: shell-script
#  tab-width: 8
#  indent-tabs-mode: nil
#  sh-indentation: 4
#  sh-basic-offset: 4
#  End:
# 
#  end of bootstrap
